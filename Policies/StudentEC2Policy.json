{
  "Version": "2012-10-17",
  "Statement": [
      {
          "Sid": "ReadEC2andSSM",
          "Effect": "Allow",
          "Action": [
              "ssm:Get*",
              "ssm:Describe*",
              "ec2:Describe*",
              "ec2:Get*",
              "cloudwatch:DescribeAlarms"
          ],
          "Resource": "*"
      },
      {
          "Sid": "CreateInstance",
          "Effect": "Allow",
          "Action": [
              "ec2:RunInstances"
          ],
          "Resource": [
              "arn:aws:ec2:*:*:*",
              "arn:aws:cloudwatch:*:538493143704:alarm:*"
          ],
          "Condition": {
              "StringLikeIfExists": {
                  "ec2:InstanceType": [
                      "t2.micro"
                  ]
              }
          }
      },
      {
          "Sid": "ManageInstance",
          "Effect": "Allow",
          "Action": [
              "ec2:TerminateInstances",
              "ec2:StopInstances",
              "ec2:StartInstances"
          ],
          "Resource": "*",
          "Condition": {
              "StringEquals": {
                  "ec2:ResourceTag/User": "${aws:username}"
              }
          }
      },
      {
        "Effect": "Allow",
        "Action": "iam:CreateServiceLinkedRole",
        "Resource": "*",
        "Condition": {
          "StringEquals": {
            "iam:AWSServiceName": "spot.amazonaws.com"
          }
        }
      },
      {
        "Sid": "CreateTemplate",
        "Effect": "Allow",
        "Action": [
            "ec2:CreateLaunchTemplate",
            "ec2:CreateLaunchTemplateVersion"
        ],
        "Resource": "*",
        "Condition": {
          "StringLikeIfExists": {
              "ec2:InstanceType": [
                  "t2.micro"
              ]
          }
      }
      },
      {
        "Sid": "ManageTemplate",
        "Effect": "Allow",
        "Action": [
            "ec2:DeleteLaunchTemplate",
            "ec2:ModifyLaunchTemplate",
            "ec2:DeleteLaunchTemplateVersions"
        ],
        "Resource": "*",
        "Condition": {
          "StringEquals": {
            "ec2:ResourceTag/User": "${aws:username}"
          }
        }
      },
      {
        "Sid": "AllowToViewRoles",
        "Effect": "Allow",
        "Action": [
            "iam:PassRole",
            "iam:ListInstanceProfiles",
            "ec2:AssociateIamInstanceProfile",
            "ec2:DisassociateIamInstanceProfile"
        ],
        "Resource": "*"
      },
      {
      "Sid": "AllowToCreateKeyPair",
      "Effect": "Allow",
      "Action": [
          "ec2:CreateKeyPair"
          ],
      "Resource": "*"
      },
      {
        "Sid": "ManageKeyPairs",
        "Effect": "Allow",
        "Action": [
            "ec2:DeleteKeyPair"
        ],
        "Resource": "*",
        "Condition": {
          "StringEquals": {
            "ec2:ResourceTag/User": "${aws:username}"
          }
        }
      },
      {
        "Sid": "CreateSecurityGroups",
        "Effect": "Allow",
        "Action": [
          "ec2:CreateSecurityGroup"
        ],
        "Resource": "*"
      },
      {
        "Sid": "AllowTagsOnEC2",
        "Effect": "Allow",
        "Action": [
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress"
        ],
        "Resource": "*",
        "Condition": {
            "StringEquals": {
                "ec2:CreateAction": [
                  "CreateSecurityGroup"
                ]
            }
        }
      },
      {
          "Sid": "ManageSecurityGroups",
          "Effect": "Allow",
          "Action": [
              "ec2:AuthorizeSecurityGroupEgress",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:DeleteSecurityGroup",
              "ec2:RevokeSecurityGroupEgress",
              "ec2:RevokeSecurityGroupIngress",
              "ec2:ModifyInstanceAttribute",
              "ec2:ModifyNetworkInterfaceAttribute"
          ],
          "Resource": "*",
          "Condition": {
            "StringEquals": {
              "ec2:ResourceTag/User": "${aws:username}"
            }
          }
      },
      {
          "Sid": "CreateSnapshot",
          "Effect": "Allow",
          "Action": [
              "ec2:CreateSnapshots",
              "ec2:CreateSnapshot"
          ],
          "Resource": [
              "arn:aws:ec2:*:*:*"
          ]
      },
      {
          "Sid": "ManageSnapshot",
          "Effect": "Allow",
          "Action": [
              "ec2:DeleteSnapshot",
              "ec2:CopySnapshot",
              "ec2:ModifySnapshotAttribute",
              "ec2:ResetSnapshotAttribute",
              "ec2:ImportSnapshot"
          ],
          "Resource": [
              "arn:aws:ec2:*:*:*"
          ],
          "Condition": {
            "StringEquals": {
              "ec2:ResourceTag/User": "${aws:username}"
            }
          }
      },
      {
          "Sid": "AllowRunInstancesWithRestrictions",
          "Effect": "Allow",
          "Action": "ec2:CreateVolume",
          "Resource": [
            "arn:aws:ec2:*:*:volume/*",
            "arn:aws:ec2:*:*:instance/*"
          ],
          "Condition": {
            "StringEquals": {
              "aws:RequestTag/User": "${aws:username}"
            },
            "ForAllValues:StringEquals": {
              "aws:TagKeys": "User"
            }
          }
        },
        {
          "Sid": "ManageVolume",
          "Effect": "Allow",
          "Action": [
            "ec2:DetachVolume",
            "ec2:AttachVolume",
            "ec2:DeleteVolume",
            "ec2:ModifyVolume",
            "ec2:ModifyVolumeAttribute"
          ],
          "Resource": "*",
          "Condition": {
            "StringEquals": {
              "ec2:ResourceTag/User": "${aws:username}"
            }
          }
      },
      {
        "Sid": "CreateAMI",
        "Effect": "Allow",
        "Action": [
          "ec2:CreateImage"
        ],
        "Resource": "*"
      },
      {
        "Sid": "ManageAMI",
        "Effect": "Allow",
        "Action": [
          "ec2:DeregisterImage"
        ],
        "Resource": "*",
        "Condition": {
          "StringEquals": {
            "ec2:ResourceTag/User": "${aws:username}"
          }
        }
      }
    ]
  }

      